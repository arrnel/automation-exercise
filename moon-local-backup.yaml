apiVersion: v1
kind: Namespace
metadata:
  name: moon
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: moon
  namespace: moon
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: moon
  name: moon
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/log
      - configmaps
      - secrets
      - resourcequotas
    verbs:
      - get
      - watch
      - list
      - create
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: moon
  namespace: moon
roleRef:
  kind: Role
  name: moon
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    namespace: moon
    name: moon
---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: RoleBinding
#metadata:
#  name: moon
#  namespace: moon
#roleRef:
#  kind: ClusterRole
#  name: edit
#  apiGroup: rbac.authorization.k8s.io
#subjects:
#- kind: ServiceAccount
#  namespace: moon
#  name: moon
#---
apiVersion: v1
kind: Service
metadata:
  name: moon
  namespace: moon
spec:
  selector:
    app: moon
  ports:
    - name: "moon"
      protocol: TCP
      port: 4444
    - name: "moon-ui"
      protocol: TCP
      port: 8080
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: browsers
  namespace: moon
spec:
  selector:
    moon: browser
  clusterIP: None
  publishNotReadyAddresses: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: moon
  namespace: moon
spec:
  replicas: 2
  selector:
    matchLabels:
      app: moon
  template:
    metadata:
      labels:
        app: moon
    spec:
      serviceAccountName: moon
      containers:
        - name: moon
          image: aerokube/moon:1.9.17
          args: ["-namespace", "moon", "-license-file", "/license/license.key", "-disable-cpu-limits", "-disable-memory-limits", "-service-account-name", "moon"]
          ports:
            - containerPort: 4444
          volumeMounts:
            - name: quota
              mountPath: /quota
              readOnly: true
            - name: config
              mountPath: /config
              readOnly: true
            #        - name: credentials
            #          mountPath: /credentials
            #          readOnly: true
            - name: users
              mountPath: /users
              readOnly: true
            - name: license-key
              mountPath: /license
              readOnly: true
        - name: moon-api
          image: aerokube/moon-api:1.9.17
          args: ["-namespace", "moon", "-license-file", "./moon/license/license.key", "-listen", ":8888"]
          ports:
            - containerPort: 8888
          volumeMounts:
            - name: quota
              mountPath: /quota
              readOnly: true
            - name: license-key
              mountPath: /license
              readOnly: true
        - name: selenoid-ui
          image: aerokube/selenoid-ui:1.10.11
          args: ["-status-uri", "http://localhost:8888", "-webdriver-uri", "http://localhost:4444"]
          ports:
            - name: selenoid-ui
              containerPort: 8080
      volumes:
        - name: quota
          configMap:
            name: quota
        - name: config
          configMap:
            name: config
        #      - name: credentials
        #        secret:
        #          secretName: credentials
        - name: users
          secret:
            secretName: users
        - name: license-key
          secret:
            secretName: licensekey

#---
#apiVersion: v1
#kind: Secret
#metadata:
#  name: credentials
#  namespace: moon
#stringData:
#  s3.accessKey: "access-key-value"
#  s3.secretKey: "secret-key-value"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: quota
  namespace: moon
data:
  browsers.json: |
    {
      "chromium": {
        "default": "128.0",
        "versions": {
          "113.0": {
            "image": "quay.io/browsers/chrome:128.0",
            "port": "4444"
          },
          "112.0": {
            "image": "quay.io/browsers/chrome:127.0",
            "port": "4444"
          }
        }
      },
      "firefox": {
        "default": "125.0",
        "versions": {
          "125.0": {
            "image": "quay.io/browsers/firefox:125.0",
            "port": "4444",
            "path": "/wd/hub"
          },
          "124.0": {
            "image": "quay.io/browsers/firefox:124.0",
            "port": "4444",
            "path": "/wd/hub"
          }
        }
      },
      "webkit": {
        "default": "15.0",
        "versions": {
          "15.0": {
            "image": "quay.io/browsers/safari:15.0",
            "port": "4444",
            "path": "/"
          },
          "14.0": {
            "image": "quay.io/browsers/safari:14.0",
            "port": "4444",
            "path": "/"
          }
        }
      }    
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: users
  namespace: moon
stringData:
  users.htpasswd: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: licensekey
  namespace: moon
stringData:
  license.key: MG1RSVdpc2Z6YjdQQVZjd2lpei9KMkd1T3dzMTFuL1dlRjVSc3NOMUcxZk9QaUxWa3Q5SnBIakIxa09wWm0vVFJqQ0tsa21xVG1OODVRZnlQbjBjVmRHVWFLampTOFF1a3VLRXRPcEUwbnEySG16QWFQWHRDYTVjMm9jZzZFaUJqeFd5ODE4UFBHZzNCNWpCYXlha3oweFBscFl1RnB0V0U1Q3FwOGl5VDdKTk9abG5aSmlPdnRmZDFvSG1nNnVwVXBLV2E4RmYwWHcreERIR29ZTE1XTldPb1hvT2ZCUnZpcDhPWW05a1FqN0hBWWVOYUtLT1lPWlVJa1dsb1gxdjNOT1htTFpZalhsQ3h1Q3V6NWhiQjIwSjVIY0JTYnZybm9zYm14RXFkSFpQWVBKWUlKTzZvVlBnODhQeFErZ1EyTk5sWG82TC9XeXU3aisrNU0rSEdPcXlOSEdlNGx4Zm1nNVhjMWlnNkN1OCtNSVVYRzNqUllqOUY4ZHdReWpSbFNMNmFpL2dRQnc3TzY0U0lwdVF2d29jYi9kVzFSYWFRVkd3ZXYrOVdING8zRWRrYkVONUhRTmQ2MUxsUnFNdmtKeWVHV21tVlVUZ2dsMDRsTFFLTmZNVG81L2JVakNBMGhNeER5VHNJdmVRRGFMMklvTWpvcFk4VERlK1U2bUJvUDVxNVYrcCtDQVhjbjYxQlRaUVp0bmNqL0JBVkdNOEZ4NW9rWHRYSVAxUkY0a1VCckZVTDFyTWF1VkZqSk5xU1pLT293dUpMTTg2SEZ0Sld0eUlRK3ZZZm1pZU0xM292MnVleDBoRlhRdFkvMkt1dUhhN3dKV2pFT0pqaEVzTjhXSy82ZlFFbi9EQzcrNkw3NzhlbmVVZ2lLZ3VFbjlMMXZMYVZ5VWtQaWc9O2V5SnNhV05sYm5ObFpTSTZJa1JsWm1GMWJIUWlMQ0p3Y205a2RXTjBJam9pVFc5dmJpSXNJbTFoZUZObGMzTnBiMjV6SWpvMGZRPT0=
